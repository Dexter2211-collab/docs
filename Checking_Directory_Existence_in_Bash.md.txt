# Checking Directory Existence in Bash with Error Handling

Here are a few different methods to check if a directory exists in Bash with error handling:

## 1. Using `if` statement with `-d` flag

```bash
#!/bin/bash

DIRECTORY="/path/to/directory"

if [ -d "$DIRECTORY" ]; then
  echo "Directory exists."
else
  echo "Directory does not exist."
fi
```

## 2. Using `test` command with `-d` flag

```bash
#!/bin/bash

DIRECTORY="/path/to/directory"

if test -d "$DIRECTORY"; then
  echo "Directory exists."
else
  echo "Directory does not exist."
fi
```

## 3. Using `[[` with `-d` flag

```bash
#!/bin/bash

DIRECTORY="/path/to/directory"

if [[ -d "$DIRECTORY" ]]; then
  echo "Directory exists."
else
  echo "Directory does not exist."
fi
```

## 4. Using the `ls` command

```bash
#!/bin/bash

DIRECTORY="/path/to/directory"

if ls "$DIRECTORY" >/dev/null 2>&1; then
  echo "Directory exists."
else
  echo "Directory does not exist."
fi
```

## 5. Using `find` command

```bash
#!/bin/bash

DIRECTORY="/path/to/directory"

if find "$DIRECTORY" -maxdepth 0 >/dev/null 2>&1; then
  echo "Directory exists."
else
  echo "Directory does not exist."
fi
```

In each of these methods, if the directory does not exist, an error message is displayed. You can enhance the error handling by adding more specific error messages or actions as needed.